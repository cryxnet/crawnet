apiVersion: v1
kind: Service
metadata:
  name: neo4j
  labels:
    app: neo4j
spec:
  type: ClusterIP
  ports:
  - port: 7474
    targetPort: 7474
    name: http
  - port: 7687
    targetPort: 7687
    name: bolt
  selector:
    app: neo4j
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo4j
spec:
  selector:
    matchLabels:
      app: neo4j
  replicas: 1
  template:
    metadata:
      labels:
        app: neo4j
    spec:
      containers:
      - name: neo4j
        image: neo4j
        env:
        - name: NEO4J_AUTH
          value: ${NEO4J_USERNAME}/${NEO4J_PASSWORD}
        volumeMounts:
        - name: neo4j-data
          mountPath: /data
      volumes:
      - name: neo4j-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: overseen
  labels:
    app: overseen
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    name: http
  selector:
    app: overseen
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: overseen
spec:
  selector:
    matchLabels:
      app: overseen
  replicas: 1
  template:
    metadata:
      labels:
        app: overseen
    spec:
      containers:
      - name: overseen
        image: cryxnet/crawnet-overseen
        env:
        - name: NEO4J_USERNAME
          value: ${NEO4J_USERNAME}
        - name: NEO4J_PASSWORD
          value: ${NEO4J_PASSWORD}
        - name: NEO4J_CONNECTION_URI
          value: ${NEO4J_CONNECTION_URI}
        - name: FLASK_APP
          value: ${FLASK_APP}
        - name: FLASK_DEBUG
          value: ${FLASK_DEBUG}
      volumeMounts:
      - name: app-data
        mountPath: /data
      volumes:
      - name: app-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: dashboard
  labels:
    app: dashboard
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  selector:
    app: dashboard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard
spec:
  selector:
    matchLabels:
      app: dashboard
  replicas: 1
  template:
    metadata:
      labels:
        app: dashboard
    spec:
      containers:
      - name: dashboard
        image: cryxnet/crawnet-dashboard
        env:
        - name: FLASK_APP_URL
          value: ${FLASK_APP_URL}
        volumeMounts:
        - name: app-data
          mountPath: /data
      volumes:
      - name: app-data
        emptyDir: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-data
  labels:
    type: local
spec:
  storageClassName: local-storage
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: Namespace
metadata:
  name: app-namespace

---
apiVersion: v1
kind: NetworkPolicy
metadata:
  name: app-net-policy
  namespace: app-namespace
spec:
  podSelector:
    matchLabels:
      app: neo4j
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: overseen
    - podSelector:
        matchLabels:
          app: dashboard
  policyTypes:
  - Ingress

---
apiVersion: v1
kind: NetworkPolicy
metadata:
  name: overseen-net-policy
  namespace: app-namespace
spec:
  podSelector:
    matchLabels:
      app: overseen
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: dashboard
  policyTypes:
  - Ingress
  
---
apiVersion: v1
kind: NetworkPolicy
metadata:
  name: dashboard-net-policy
  namespace: app-namespace
spec:
  podSelector:
    matchLabels:
      app: dashboard
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: overseen
  policyTypes:
  - Ingress

